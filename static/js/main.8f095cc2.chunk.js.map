{"version":3,"sources":["img/classic.png","img/fire.png","img/rainbow.png","img/empty.png","img/ragnaros.png","img/cleric.png","serviceWorker.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","WindowLogin","props","className","action","id","placeholder","type","onClick","onLoginClick","onRegistrationClick","WindowRegistration","onCansleClick","WindowGameOption","lastName","firstName","onChange","onBackgroundCardChange","value","alt","onStartClick","Card","index","state","cardInRawNumber","src","cardBackground","onCardClick","bind","this","style","marginRight","cardMargin","fillArray","array","i","length","cleric","ragnaros","gameOver","seconds","difficult","arrayOfUsers","user","time","JSON","parse","localStorage","getItem","setItem","stringify","sortLeaderBoard","flag","Number","j","shift","push","leaderboardArray","turnCards","cards","transform","setTimeout","CreateLeaderboard","map","element","onCreateGameOptionClick","StopWatch","stopwatchId","timer","setInterval","setState","clearInterval","React","Component","ChooseWindow","windowNumber","gameArray","turnCardsArray","isAnimationGoing","foundCardsNumber","minutes","createLoginWindow","createRegistrationWindow","createGameOption","login","registration","backgroundCardChange","createGameArray","arrayOfUserData","document","querySelector","querySelectorAll","usersArray","forEach","email","password","alert","patterName","userInfo","backgroundCardType","getElementById","backgroundCardImage","classic","fire","rainbow","difficulty","easyArrayLength","normalArrayLength","hardArrayLength","Math","floor","random","shuffleArray","gameField","gameFieldWidth","getComputedStyle","slice","card","includes","onclick","empty","stopwatch","innerHTML","ReactDOM","render","navigator","serviceWorker","ready","then","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8f095cc2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/classic.d65ef502.png\";","module.exports = __webpack_public_path__ + \"static/media/fire.86667da2.png\";","module.exports = __webpack_public_path__ + \"static/media/rainbow.d7fb95cb.png\";","module.exports = __webpack_public_path__ + \"static/media/empty.33c51ce2.png\";","module.exports = __webpack_public_path__ + \"static/media/ragnaros.f99c53f7.png\";","module.exports = __webpack_public_path__ + \"static/media/cleric.aff90838.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM, { render } from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport classic from './img/classic.png';\nimport fire from './img/fire.png';\nimport rainbow from './img/rainbow.png';\nimport ragnaros from './img/ragnaros.png';\nimport cleric from './img/cleric.png';\nimport empty from './img/empty.png';\n\nfunction WindowLogin(props){\n  return(\n    <div className = \"wrapper\">\n      <form className = \"entryForm\" action = \"#\">\n        <input id = \"userEmail\" placeholder = \"Enter your email\" />\n        <input id = \"userPassword\" type = \"password\" placeholder = \"Enter your password\"/>\n        <button type = \"submit\" onClick = {props.onLoginClick}>Login</button>\n        <span>or</span>\n        <button onClick = {props.onRegistrationClick}>Registration</button>\n      </form>\n    </div>\n  );\n}\n\nfunction WindowRegistration(props){\n  return(\n    <div className = \"wrapper\">\n      <form className = \"entryForm\" action = \"#\">\n        <input id = \"userFirstName\" placeholder = \"Enter your First Name\"/>\n        <input id = \"userLastName\" placeholder = \"Enter your Last Name\"/>\n        <input id = \"userEmail\" placeholder = \"Enter your email\"/>\n        <input id = \"userPassword\" type = \"password\" placeholder = \"Enter your password\"/>\n        <button type = \"submit\" onClick = {props.onRegistrationClick}>Registration</button>\n        <button onClick = {props.onCansleClick}>Cancle</button>\n      </form>\n    </div>\n  );\n}\n\nfunction WindowGameOption(props){\n  return(\n    <div id = \"wrapper\">\n      <p>Hello {props.lastName} {props.firstName}</p>\n      <div id = \"gameOption\"> \n        <div className = \"selectChoose\">\n            <select id = \"backgroundCardType\" onChange = {props.onBackgroundCardChange}>\n                <option value = \"false\">Choose Card Backgrond</option>\n                <option value = \"classic\">Classic</option>\n                <option value = \"fire\">Fire</option>\n                <option value = \"rainbow\">Rainbow</option>\n            </select>\n            <img id = \"backgroundCardImage\" alt=\"\"/>\n        </div>\n        <div className = \"selectChoose\">\n            <select id = \"difficulty\">\n                <option value = \"false\">Choose difficulty</option>\n                <option value = \"easy\">Easy</option>\n                <option value = \"normal\">Normal</option>\n                <option value = \"hard\">Hard</option>\n            </select>   \n        </div>\n        <button id = \"start\" onClick = {props.onStartClick} >Start</button> \n      </div>\n      \n      <div id = \"gameRules\">\n          <span className = \"title\">How to play</span>\n          <ol className = \"rules\">\n              <li>Select two card try to match the pictures</li>\n              <li>If you match the pictures you can go again</li>\n              <li>If they don't match it the computer turn them</li>\n              <li>The playrs that find all pairs win!</li>\n              <li>Have Fun!</li>\n          </ol>\n      </div>\n    </div>\n  );\n}\n\nfunction Card(props){\n  if( (props.index + 1) % props.state.cardInRawNumber === 0){\n    return(\n      <img id = {`card${props.index}`} src = {props.state.cardBackground} alt = '' \n       onClick = {props.onCardClick.bind(this, props.index, props.state)}></img>\n    );\n  }\n  else{\n    return(\n      <img id = {`card${props.index}`} src = {props.state.cardBackground} alt = '' \n       onClick = {props.onCardClick.bind(this, props.index, props.state)}\n       style={{marginRight: props.state.cardMargin}}></img>\n    );\n  }\n}\n\nfunction fillArray(array){\n  let i = 0;\n  while(i < array.length){\n      array[i] = cleric;\n      i++;\n      array[i] = ragnaros;\n      i++;\n  }\n}\n\nfunction gameOver(firstName, lastName, seconds, difficult){\n  let arrayOfUsers;\n  arrayOfUsers = JSON.parse(localStorage.getItem(`${difficult}leaderboard`));    \n  let user = {\n      firstName: firstName,\n      lastName: lastName,\n      time: seconds\n  }\n  if(arrayOfUsers){\n      if(arrayOfUsers.length < 10){\n          arrayOfUsers[arrayOfUsers.length] = user;\n          localStorage.setItem(`${difficult}leaderboard`, JSON.stringify(arrayOfUsers));\n      }\n      else{\n          shift(user, arrayOfUsers);\n          localStorage.setItem(`${difficult}leaderboard`, JSON.stringify(arrayOfUsers));\n      }\n  }\n  else{\n      arrayOfUsers = [];\n      arrayOfUsers.push(user);\n      localStorage.setItem(`${difficult}leaderboard`, JSON.stringify(arrayOfUsers));\n  }\n}\n\nfunction shift(user, array){\n  sortLeaderBoard(array);\n  let i = 0;\n  let flag = false;\n  do{\n      if(Number(array[i].time) > Number(user.time)){\n          flag = true;\n      }\n      else{\n          i++;\n      }\n  }while(!flag && i < array.length);\n  if(flag){\n      for(let j = array.length - 1; j > i; j--){\n          [array[j - 1], array[j]] = [array[j], array[j - 1]];\n      }\n      array[i] = user;\n  }\n}\n\nfunction sortLeaderBoard(leaderboardArray){\n  for(let i = leaderboardArray.length - 1; i > 0; i--){\n      for(let j = 0; j < i; j++){\n          if(Number(leaderboardArray[j].time) > Number(leaderboardArray[j + 1].time)){\n              [leaderboardArray[j], leaderboardArray[j + 1]] = [leaderboardArray[j + 1], leaderboardArray[j]]\n          }\n      }\n  }\n}\n\nfunction shuffleArray(array){\n  let j;\n  for(let i = 0; i < array.length; i++){\n      j = Math.floor(Math.random() * (array.length - 1));\n      [array[i], array[j]] = [array[j], array[i]];\n  }\n}\n\nfunction turnCards(cards, cardBackground){\n  for(let i = 0; i < cards.length; i++){\n    cards[i].style.transform = 'scaleX(0.001)';\n  }\n\n  setTimeout(() => {\n    for(let i = 0; i < cards.length; i++){\n      cards[i].src = cardBackground;\n      cards[i].style.transform = 'scaleX(1)';\n    } \n  }, 200);\n}\n\nfunction CreateLeaderboard(props){\n  return(\n    <div className = \"wrapper\">\n      <table id = \"leaderboard\">\n        <thead>\n          <tr>\n            <td>Place</td>\n            <td>Name</td>\n            <td>Time</td>\n          </tr>\n        </thead>\n        {\n          props.arrayOfUsers.map( (element, index) => {\n            return(\n              <tbody>\n                <tr>\n                  <td>{index + 1}</td>\n                  <td>{element.lastName} {element.firstName}</td>\n                  <td>{element.time}</td>\n                </tr>\n              </tbody>\n            )\n          } )\n          }\n      </table>\n      <button id = \"menu\" onClick = {props.onCreateGameOptionClick}>Menu</button>\n    </div> \n  );\n}\n\nclass StopWatch extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      seconds: 0,\n      stopwatchId: 0\n    };  \n    this.timer = this.timer.bind(this);\n  }\n  componentDidMount(){\n    let stopwatchId = setInterval(this.timer, 1000);\n    this.setState({stopwatchId: stopwatchId});\n  }\n\n  componentWillUnmount(){\n    clearInterval(this.state.stopwatchId);\n  }\n\n  timer(){\n    this.setState({seconds: this.state.seconds + 1});\n  }\n  render(){\n    return(\n      <span id = \"stopwatch\">{`${this.state.seconds}`}</span>\n    );\n  }\n}\n\nclass ChooseWindow extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      windowNumber: 0,\n      firstName: '',\n      lastName: '',\n      cardBackground: '',\n      difficult: '',\n      gameArray: [],\n      cardInRawNumber: 0,\n      cardMargin: 0,\n      turnCardsArray: [],\n      isAnimationGoing: false,\n      foundCardsNumber: 0,\n      stopwatchId: 0,\n      seconds: 0,\n      minutes: 0,\n      arrayOfUsers: []\n    };\n    this.createLoginWindow = this.createLoginWindow.bind(this);\n    this.createRegistrationWindow = this.createRegistrationWindow.bind(this);\n    this.createGameOption = this.createGameOption.bind(this);\n    this.login = this.login.bind(this);\n    this.registration = this.registration.bind(this);\n    this.backgroundCardChange = this.backgroundCardChange.bind(this);\n    this.createGameArray = this.createGameArray.bind(this);\n    this.onCardClick = this.onCardClick.bind(this);\n  }\n\n  login(){\n    let form = document.querySelector('.entryForm');\n    let arrayOfUserData = form.querySelectorAll('input');\n    let patternEmail = /^[a-zA-Z]\\w+@[a-z]+\\.[a-z]{2,3}$/;\n    let patternPassword = /^\\w{4}\\w*$/;\n    if(arrayOfUserData[0].value.match(patternEmail) && arrayOfUserData[1].value.match(patternPassword))\n    {\n        let usersArray = localStorage.getItem('usersArray');\n        if(usersArray){\n            let flag = false;\n            usersArray = JSON.parse(usersArray);\n            usersArray.forEach(element => {\n                if(element.email === arrayOfUserData[0].value && element.password === arrayOfUserData[1].value){\n                    flag = true;\n                    this.setState({firstName: element.firstName});\n                    this.setState({lastName: element.lastName});\n                }\n            });\n            if(flag){\n                this.setState({windowNumber: 2});\n            }\n            else{\n                alert('There is no such email or password is not correct');\n            }\n        }\n        else{\n            alert('There is no such email or password is not correct');\n        }\n    }\n    else{\n        alert('Enter your email and password');\n    }   \n  }\n\n  registration(){\n    let form = document.querySelector('.entryForm');\n    let arrayOfUserData = form.querySelectorAll('input');\n    let patterName = /^[A-Z]?[a-z]{2}[a-z]*$/\n    let patternEmail = /^[a-zA-Z]\\w+@[a-z]+\\.[a-z]{2,3}$/;\n    let patternPassword = /^\\w{4}\\w*$/;\n    if(arrayOfUserData[0].value.match(patterName) && arrayOfUserData[1].value.match(patterName) \n       && arrayOfUserData[2].value.match(patternEmail) && arrayOfUserData[3].value.match(patternPassword))\n    {\n        let usersArray = localStorage.getItem('usersArray');\n        let userInfo = {\n            firstName: arrayOfUserData[0].value,\n            lastName: arrayOfUserData[1].value,\n            email: arrayOfUserData[2].value,\n            password: arrayOfUserData[3].value\n        };\n        this.setState({firstName: userInfo.firstName});\n        this.setState({lastName: userInfo.lastName});\n        if(usersArray){\n            let flag = true;\n            usersArray = JSON.parse(usersArray);\n            usersArray.forEach(element => {\n                if(element.email === arrayOfUserData[2].value){\n                    flag = false;\n                }\n            });\n            if(flag){\n                usersArray.push(userInfo);\n                usersArray = JSON.stringify(usersArray);\n                localStorage.setItem('usersArray', usersArray);\n                this.setState({windowNumber: 2});\n            }\n            else{\n                alert('User with such email is already exist');\n            }\n        }\n        else{\n            let usersArray = [];\n            usersArray.push(userInfo);\n            usersArray = JSON.stringify(usersArray);\n            localStorage.setItem('usersArray', usersArray);\n            this.setState({windowNumber: 2});\n        }\n    }\n    else{\n        alert('Enter your email and password');\n    }   \n  }\n\n  backgroundCardChange(){\n    let backgroundCardType = document.getElementById('backgroundCardType');\n    let backgroundCardImage = document.getElementById('backgroundCardImage');\n    if(backgroundCardType.value === 'classic'){\n      this.setState({cardBackground: classic});\n      backgroundCardImage.src = classic;  \n    }\n    else if(backgroundCardType.value === 'fire'){\n      this.setState({cardBackground: fire});\n      backgroundCardImage.src = fire;\n    }\n    else if(backgroundCardType.value === 'rainbow'){\n      this.setState({cardBackground: rainbow});\n      backgroundCardImage.src = rainbow;\n    }\n    else if(backgroundCardType.value === 'false'){\n      backgroundCardImage.src = \"\";\n    }\n  }\n\n  createGameArray(){\n    let difficulty = document.getElementById('difficulty');\n    let backgroundCardType = document.getElementById('backgroundCardType');\n    let easyArrayLength = 16;\n    let normalArrayLength = 28;\n    let hardArrayLength = 40;\n    let gameArray = [];\n    if(difficulty.value !== 'false' && backgroundCardType.value !== 'false'){\n      let cardInRawNumber = 0;\n      if(difficulty.value === 'easy'){\n        this.setState({difficult: 'easy'});\n        gameArray.length = easyArrayLength;\n        cardInRawNumber = easyArrayLength / 4;\n        fillArray(gameArray);\n      }\n      else if(difficulty.value === 'normal'){\n        this.setState({difficult: 'normal'});\n        gameArray.length = normalArrayLength;\n        cardInRawNumber = normalArrayLength / 4;\n        fillArray(gameArray);\n      }\n      else if(difficulty.value === 'hard'){\n        this.setState({difficult: 'hard'});\n        gameArray.length = hardArrayLength;\n        cardInRawNumber = hardArrayLength / 4 ;\n        fillArray(gameArray);\n      }\n      shuffleArray(gameArray);\n      this.setState({gameArray: gameArray});\n      this.setState({cardInRawNumber: cardInRawNumber});\n      this.setState({windowNumber: 3});\n      let gameField = document.getElementById('root');\n      let gameFieldWidth = window.getComputedStyle(gameField);\n      gameFieldWidth = gameFieldWidth['width'];\n      gameFieldWidth = 0.8 * Number(gameFieldWidth.slice(0, -2));\n      let cardMargin = Number( gameFieldWidth  - (  100 * cardInRawNumber ) - 30 ) \n                        / (cardInRawNumber - 1);\n      this.setState({cardMargin: cardMargin});\n    }\n    else{\n      alert('Choose difficulty and card background');\n    }\n  }\n\n  onCardClick(index, state){\n    let card = document.getElementById(`card${index}`);\n    if(state.isAnimationGoing === false && state.turnCardsArray.length < 2){\n      state.isAnimationGoing = true;\n      if(card.src.includes(state.cardBackground)){\n        state.turnCardsArray.push(card);\n          turnCards([card], state.gameArray[index]);\n      }\n\n      if(state.turnCardsArray.length === 2){\n          setTimeout(() => {\n              if(state.turnCardsArray[0].src ===  state.turnCardsArray[1].src){\n                state.turnCardsArray[0].onclick = \"\";\n                state.turnCardsArray[1].onclick = \"\";\n                setTimeout( () => {\n                  state.turnCardsArray[0].src = empty;\n                  state.turnCardsArray[1].src = empty;\n                  state.turnCardsArray = [];\n                  state.foundCardsNumber += 2;\n                }, 200)\n              }\n              else{\n                  setTimeout(() =>{\n                      turnCards(state.turnCardsArray, state.cardBackground);\n                      state.turnCardsArray = [];\n                  }, 600)\n              }\n          }, 200);\n      }\n      setTimeout(() => {state.isAnimationGoing = false}, 600);\n    }\n    \n    setTimeout( () => {\n        if(state.foundCardsNumber === state.gameArray.length){\n          state.isAnimationGoing = false;\n          state.gameArray = [];\n          let stopwatch = document.getElementById('stopwatch');\n          let time = Number(stopwatch.innerHTML);\n          state.seconds = time;\n          gameOver(state.firstName, state.lastName, state.seconds, state.difficult);\n          state.foundCardsNumber = 0;\n          let arrayOfUsers = JSON.parse(localStorage.getItem(`${state.difficult}leaderboard`));\n          sortLeaderBoard(arrayOfUsers);\n          this.setState({arrayOfUsers: arrayOfUsers});\n          this.setState({windowNumber: 4});\n        }\n    }, 600);\n  }\n\n  createLoginWindow(){\n    this.setState({windowNumber: 0});\n  }\n\n  createRegistrationWindow(){\n    this.setState({windowNumber: 1});\n  }  \n\n  createGameOption(){\n    this.setState({windowNumber: 2});\n  }\n\n  createGameWindowBasis(){\n    this.setState({windowNumber: 3});\n  }\n  render(){\n    let window;\n    if(this.state.windowNumber === 0){\n      window = <WindowLogin onRegistrationClick = {this.createRegistrationWindow} onLoginClick = {this.login}/>;\n    }\n    else if(this.state.windowNumber === 1){\n      window = <WindowRegistration onCansleClick = {this.createLoginWindow} onRegistrationClick = {this.registration}/>;\n    }\n    else if(this.state.windowNumber === 2){\n      window = <WindowGameOption lastName = {this.state.lastName} firstName = {this.state.firstName} \n                onRegistrationClick = {this.createGameOption} onBackgroundCardChange = {this.backgroundCardChange}\n                onStartClick = {this.createGameArray} />\n    }\n    else if(this.state.windowNumber === 3){\n      window = (\n        <div className = 'wrapper'>\n          <StopWatch/>\n          <div id = \"gameField\">\n            {this.state.gameArray.map((element, index) => {\n              return <Card index = {index} state = {this.state} onCardClick = {this.onCardClick}/>\n            })}\n          </div>\n        </div>\n      );\n    }\n    else if(this.state.windowNumber === 4){\n      window = (\n        <CreateLeaderboard onCreateGameOptionClick = {this.createGameOption} arrayOfUsers = {this.state.arrayOfUsers}/>\n      );\n    }\n\n    return(\n      [window]\n    );\n  }\n  \n}\n\nReactDOM.render(\n  <ChooseWindow />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}